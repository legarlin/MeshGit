global string $gMainWindow;
setParent $gMainWindow;
menu -label "MeshGit" -parent $gMainWindow -tearOff on MeshGitMenu;
menuItem -ann "Load Files" -label "Load Files" -echoCommand true -command open;

global string $originalFileField;
global string $AFileField;
global string $BFileField;
global string $meshGitNodeNameGlobal;

global proc open() 
{
	global string $originalFileField;
	global string $AFileField;
	global string $BFileField;

	if (`window -exists MeshGitGUI`) { deleteUI -window MeshGitGUI; }
	window -title "Browse MeshGit Files" -width 600 MeshGitGUI;
	columnLayout -adjustableColumn true;

	frameLayout -label "Original Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$originalFileField = `textField -text "" fileFieldOriginal`;
	button -label "Browse" -command browseOriginalFile;
	setParent..;

	frameLayout -label "Derivative A Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$AFileField = `textField -text "" fileFieldA`;
	button -label "Browse" -command browseAFile;
	setParent..;

	frameLayout -label "Derivative B Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$BFileField = `textField -text "" fileFieldB`;
	button -label "Browse" -command browseBFile;
	setParent..;

	columnLayout -adjustableColumn true;
	button -label "Done" -command load -actOnPress false;
	button -label "Cancel" -command cancel -actOnPress false;
	setParent..;
	showWindow MeshGitGUI;
}


global proc browseOriginalFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldOriginal;
}

global proc browseAFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldA;
}

global proc browseBFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldB;
}


global proc load() 
{
	global string $originalFileField;
	global string $AFileField;
	global string $BFileField;
	global string $meshGitNodeNameGlobal;
	global string $vizNodeNameGlobal;
	global string $outputMeshName; 

	string $originalFilename = `textField -q -text $originalFileField`;
	string $AFilename = `textField -q -text $AFileField`;
	string $BFilename = `textField -q -text $BFileField`;

	//Import and get the filenames
	file -i $originalFilename;
	select -allDagObjects;
	string $nameFirst[] = `ls -selection`;
	string $originalMeshName = $nameFirst[0];

	file -i $AFilename;
	select -allDagObjects;
	select -deselect $originalMeshName;
	string $nameSecond[] = `ls -selection`;
	string $AMeshName = $nameSecond[0];

	file -i $BFilename;
	select -allDagObjects;
	select -deselect $originalMeshName;
	select -deselect $AMeshName;
	string $nameThird[] = `ls -selection`;
	string $BMeshName = $nameThird[0];
	
	//Move the derivative meshes to a side 
	string $attrNameA = $AMeshName + ".translate";
	setAttr $attrNameA 0 2 1;
	string $attrNameB = $BMeshName + ".translate";
	setAttr $attrNameB 0 2 -1;

	//Output
	file -i $originalFilename;
	select -allDagObjects;
	select -deselect $originalMeshName;
	select -deselect $AMeshName;
	select -deselect $BMeshName;
	string $nameFourth[] = `ls -selection`;
	$outputMeshName = $nameFourth[0];
	string $attrNameOutput = $outputMeshName + ".translate";
	setAttr $attrNameOutput 0 4 0;

	print("Object Names in Scene");
	print("Original 1 = " + $originalMeshName  + " ");
	print("Original 2 = " + $AMeshName + " ");
	print("Original 3 = " + $BMeshName + " ");

	////UNCOMMENT THIS LATER
	//Create the meshgit node and store the name 
	//string $mainNodeName = `createNode MeshGitNode`;
	//print("Created node : " + $mainNodeName);
	//Attach the geometries to the node
	//deformer -e -g $originalMeshName $mainNodeName;
	//deformer -e -g $AMeshName $mainNodeName;
	//deformer -e -g $BMeshName $mainNodeName;
	select -allDagObjects;
	string $mainNodeName[] = `deformer -type MeshGitNode`;

	//Create visualizer node
	$vizNodeNameGlobal = `createNode MeshGitLocatorNode`;

	//Connect the nodes 
	MeshGitCmd -c $mainNodeName[0] $vizNodeNameGlobal;
	$meshGitNodeNameGlobal = $mainNodeName[0];

	//Run the diff
	MeshGitCmd -d $mainNodeName[0];
	openDiffWindow($mainNodeName[0]);

	//Connect the attributes so we have access to the kMesh Objects

	deleteUI -window MeshGitGUI;
}

global proc openDiffWindow(string $mainNodeName) {
	window -title "MESHGIT CONTROLS" -widthHeight 300 200 myWindow;
    columnLayout -columnAttach "both" 5 -rowSpacing 5 -columnWidth 100;
	string $comm = "MeshGitCmd -d " + $mainNodeName;
    button -label "Start Diff" -command $comm -width 250;

	string $comm2 = "MeshGitCmd -mu " + $mainNodeName + "; setAttr " +  $mainNodeName +".currentFrame 3" ;
	button -label "Merge Unconflicting Edits" -command $comm2 -width 250;
	
	string $comm3 = "exportMergedMesh()"; 
	button -label "Export Merged Mesh" -command $comm3 -width 250;

	showWindow myWindow; 
}

global proc cancel()
{
	deleteUI -window MeshGitGUI;
}

global proc unloadMenu()
{
	global string $gMainFileMenu;
	buildFileMenu();

	if (`menu -ex MeshGitMenu`) deleteUI -menu MeshGitMenu;
}

global proc updateSelectedEditIndex()
{
	global string $meshGitNodeNameGlobal;
	print($meshGitNodeNameGlobal); 
	MeshGitCmd -us $meshGitNodeNameGlobal;


	global string $vizNodeNameGlobal;
	string $comm = "setAttr " +  $vizNodeNameGlobal + ".localPositionX 0";
	eval($comm);
}

global proc showListOfEditOperations(string $nodeName)
{
	window;
	paneLayout;
	textScrollList -numberOfRows 8 -allowMultiSelection false
		-append "one"      -append "two"      -append "three"
		-append "four"     -append "five"     -append "six"
		-append "seven"    -append "eight"    -append "nine"
		-append "ten"      -append "eleven"   -append "twelve"
		-append "thirteen" -append "fourteen" -append "fifteen"
		-selectItem "six"
		-showIndexedItem 4
	showWindow;
	
}

global proc conflictResolveA()
{
	global string $meshGitNodeNameGlobal;
	string $a = "0";
	MeshGitCmd -rc $a $meshGitNodeNameGlobal;
	forceMeshGitNodeRefresh();
}

global proc conflictResolveB()
{
	global string $meshGitNodeNameGlobal;
	string $b = "1";
	MeshGitCmd -rc $b $meshGitNodeNameGlobal;
	forceMeshGitNodeRefresh();
}

global proc conflictResolveBoth()
{
	global string $meshGitNodeNameGlobal;
	string $both = "2";
	MeshGitCmd -rc $both $meshGitNodeNameGlobal;
	forceMeshGitNodeRefresh();
}

global proc forceMeshGitNodeRefresh(){
	global string $meshGitNodeNameGlobal;
	string $comm = "setAttr " +  $meshGitNodeNameGlobal + ".currentFrame 0";
	eval($comm);
}

global proc exportMergedMesh(){
	global string $outputMeshName; 
	string $dir = (`workspace -q -dir` + "mergedMesh.mb" );
	string $newName[] = `duplicate $outputMeshName`; 
	string $attrName = $newName[0] + ".translate";
	setAttr $attrName 0 0 0;
	select $newName[0];
	file -op "" -typ "mayaBinary" -es $dir;
	delete $newName[0];

	string $mess =  "Merged mesh exported to " + $dir; 
	$response = `confirmDialog -title "Export Completed" 
			              -message $mess
			              -button "Okay!"`;
}