global string $gMainWindow;
setParent $gMainWindow;
menu -label "MeshGit" -parent $gMainWindow -tearOff on MeshGitMenu;
menuItem -ann "Load Files" -label "Load Files" -echoCommand true -command open;

global string $originalFileField;
global string $AFileField;
global string $BFileField;

global proc open() 
{
	global string $originalFileField;
	global string $AFileField;
	global string $BFileField;

	if (`window -exists MeshGitGUI`) { deleteUI -window MeshGitGUI; }
	window -title "Browse MeshGit Files" -width 600 MeshGitGUI;
	columnLayout -adjustableColumn true;

	frameLayout -label "Original Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$originalFileField = `textField -text "" fileFieldOriginal`;
	button -label "Browse" -command browseOriginalFile;
	setParent..;

	frameLayout -label "Derivative A Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$AFileField = `textField -text "" fileFieldA`;
	button -label "Browse" -command browseAFile;
	setParent..;

	frameLayout -label "Derivative B Mesh File" -collapsable false;
	columnLayout -adjustableColumn true;
	$BFileField = `textField -text "" fileFieldB`;
	button -label "Browse" -command browseBFile;
	setParent..;

	columnLayout -adjustableColumn true;
	button -label "Done" -command load -actOnPress false;
	button -label "Cancel" -command cancel -actOnPress false;
	setParent..;
	showWindow MeshGitGUI;
}


global proc browseOriginalFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldOriginal;
}

global proc browseAFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldA;
}

global proc browseBFile() 
{
	textField -edit -text `fileDialog2 -fm 1` fileFieldB;
}


global proc load() 
{
	global string $originalFileField;
	global string $AFileField;
	global string $BFileField;

	string $originalFilename = `textField -q -text $originalFileField`;
	string $AFilename = `textField -q -text $AFileField`;
	string $BFilename = `textField -q -text $BFileField`;

	//Import and get the filenames
	file -i $originalFilename;
	select -allDagObjects;
	string $nameFirst[] = `ls -selection`;
	string $originalMeshName = $nameFirst[0];

	file -i $AFilename;
	select -allDagObjects;
	select -deselect $originalMeshName;
	string $nameSecond[] = `ls -selection`;
	string $AMeshName = $nameSecond[0];

	file -i $BFilename;
	select -allDagObjects;
	select -deselect $originalMeshName;
	select -deselect $AMeshName;
	string $nameThird[] = `ls -selection`;
	string $BMeshName = $nameThird[0];
	
	print("Object Names in Scene");
	print("Original 1 = " + $originalMeshName  + " ");
	print("Original 2 = " + $AMeshName + " ");
	print("Original 3 = " + $BMeshName + " ");

	//Create the meshgit node and store the name 
	string $mainNodeName = `createNode MeshGitNode`;
	print("Created node : " + $mainNodeName);
	
	//Attach the geometries to the node
	deformer -e -g $originalMeshName $mainNodeName;
	deformer -e -g $AMeshName $mainNodeName;
	deformer -e -g $BMeshName $mainNodeName;

	//Create visualizer node
	string $vizNodeName = `createNode MeshGitLocatorNode`;

	//Connect the nodes 
	MeshGitCmd -c $vizNodeName $mainNodeName;

	deleteUI -window MeshGitGUI;
}

global proc cancel()
{
	deleteUI -window MeshGitGUI;
}

global proc unloadMenu()
{
	global string $gMainFileMenu;
	buildFileMenu();

	if (`menu -ex MeshGitMenu`) deleteUI -menu MeshGitMenu;
}